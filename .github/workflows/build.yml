name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-web:
    name: Build Vue Frontend
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Dependencies
        run: npm install
        
      - name: Build Vue App
        run: npm run build
        
      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: vite_web
          path: dist/

  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, win, mac]
        include:
          - os: linux
            platform: linux
            target: x64
          - os: win
            platform: win32
            target: x64
          - os: mac
            platform: darwin
            target: x64
            
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Dependencies
        run: |
          cd server
          npm install
          npm install -g pkg
          
      - name: Build Server Binary
        run: |
          cd server
          pkg . --targets node18-${{ matrix.platform }}-${{ matrix.target }} --output ../build/lanchat-${{ matrix.os }}
          
      - name: Upload Server Build
        uses: actions/upload-artifact@v4
        with:
          name: server-${{ matrix.os }}
          path: build/lanchat-${{ matrix.os }}*

  create-release:
    name: Create Release
    needs: [build-web, build-server]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        
      - name: Prepare Release Files
        run: |
          mkdir release
          cp -r vite_web/* release/
          mkdir -p release/server
          cp server-*/* release/server/
          cd release
          zip -r ../lanchat-web.zip .
          cd ..
          zip -r lanchat-linux.zip server-linux/*
          zip -r lanchat-win.zip server-win/*
          zip -r lanchat-mac.zip server-mac/*
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            lanchat-web.zip
            lanchat-linux.zip
            lanchat-win.zip
            lanchat-mac.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 